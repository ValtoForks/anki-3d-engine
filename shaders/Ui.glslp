// Copyright (C) 2009-2018, Panagiotis Christopoulos Charitos and contributors.
// All rights reserved.
// Code licensed under the BSD License.
// http://www.anki3d.org/LICENSE

#pragma anki mutator TEXTURE_TYPE 0 1 // 0: no tex, 1: rgba tex

#pragma anki start vert
#include <shaders/Common.glsl>

layout(location = 0) in Vec2 in_pos;
layout(location = 1) in Vec4 in_col;
#if TEXTURE_TYPE > 0
layout(location = 2) in Vec2 in_uv;
#endif

#if TEXTURE_TYPE > 0
layout(location = 0) out Vec2 out_uv;
#endif
layout(location = 1) out Vec4 out_col;

out gl_PerVertex
{
	Vec4 gl_Position;
};

layout(ANKI_UBO_BINDING(0, 0)) uniform u_
{
	Vec4 u_transform; // x: x scale, y: y scale, z: x transl, w: y transl
};

void main()
{
#if TEXTURE_TYPE > 0
	out_uv = in_uv;
#endif
	out_col = in_col;

	Vec2 pos = u_transform.xy * in_pos + u_transform.zw;
	gl_Position = Vec4(pos, 0.0, 1.0);
}
#pragma anki end

#pragma anki start frag
#include <shaders/Common.glsl>

#if TEXTURE_TYPE > 0
layout(location = 0) in Vec2 in_uv;
#endif
layout(location = 1) in Vec4 in_col;

layout(location = 0) out Vec4 out_col;

#if TEXTURE_TYPE > 0
layout(ANKI_TEX_BINDING(0, 0)) uniform sampler2D u_tex;
#endif

void main()
{
#if TEXTURE_TYPE == 0
	out_col = in_col;
#elif TEXTURE_TYPE == 1
	out_col = in_col * texture(u_tex, in_uv);
#endif
}

#pragma anki end
